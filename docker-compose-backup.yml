version: '3.8'

services:
  traefik:
    image: traefik:v2.6
    command:
      - "--api.insecure=true"  # Enable Traefik dashboard (optional)
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"  # Only HTTP for local development
    ports:
      - "80:80"  # Expose only HTTP port
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - app-network
    restart: always

  frontend:
    image: frontend-image
    environment:
      - PORT=${PORT}
      - AUTH_API_ADDRESS=http://localhost/api/auth
      - TODOS_API_ADDRESS=http://localhost/api/todos
      - VUE_APP_USERS_API_URL=http://localhost/api/users
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=8080"
    depends_on:
      - auth-api
      - todos-api
      - users-api
    networks:
      - app-network
    restart: always

  auth-api:
    build: ./auth-api
    environment:
      - AUTH_API_PORT=${AUTH_API_PORT}
      - JWT_SECRET=${JWT_SECRET}
      - USERS_API_ADDRESS=${USERS_API_ADDRESS}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.auth-api.rule=Host(`localhost`) && PathPrefix(`/api/auth`)"
      - "traefik.http.routers.auth-api.entrypoints=web"
      - "traefik.http.services.auth-api.loadbalancer.server.port=${AUTH_API_PORT}"
      - "traefik.http.middlewares.auth-strip-prefix.stripprefix.prefixes=/api/auth"
      - "traefik.http.routers.auth-api.middlewares=auth-strip-prefix@docker"
    depends_on:
      - redis
    networks:
      - app-network
    restart: always

  todos-api:
    build: ./todos-api
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
      - AUTH_API_URL=http://auth-api:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.todos-api.rule=Host(`localhost`) && PathPrefix(`/api/todos`)"
      - "traefik.http.routers.todos-api.entrypoints=web"
      - "traefik.http.middlewares.todos-strip-prefix.stripprefix.prefixes=/api/todos"
      - "traefik.http.routers.todos-api.middlewares=todos-strip-prefix@docker"
    depends_on:
      - redis
    networks:
      - app-network
    restart: always

  users-api:
    build: ./users-api
    environment:
      - SERVER_PORT=${SERVER_PORT}
      - JWT_SECRET=${JWT_SECRET}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users-api.rule=Host(`localhost`) && PathPrefix(`/api/users`)"
      - "traefik.http.routers.users-api.entrypoints=web"
      - "traefik.http.services.users-api.loadbalancer.server.port=${SERVER_PORT}"
      - "traefik.http.middlewares.users-strip-prefix.stripprefix.prefixes=/api/users"
      - "traefik.http.routers.users-api.middlewares=users-strip-prefix@docker"
    depends_on:
      - redis
    networks:
      - app-network
    restart: always

  log-processor:
    build: ./log-message-processor
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_CHANNEL=${REDIS_CHANNEL}
    depends_on:
      - redis
    networks:
      - app-network
    restart: always

  redis:
    image: redis:6-alpine
    networks:
      - app-network
    restart: always
    volumes:
      - redis-data:/data

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
